install.packages('ggplot2')
install.packages('dplyr')
install.packages('caret')
require(devtools)
install.packages('devtools')
require(devtools)
install_github('slidify', 'ramnathv')
install_github("slidifyLibraries", "ramnathv")
setwd("~/Documents/School/Coursera/course9_developing_data_products/DevelopingDataProducts_Project")
runApp()
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/Documents/School/Coursera/course9_developing_data_products/sr27asc/test.r')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(ggvis)
library(dplyr)
library(RSQLite)
db <- src_sqlite("Food.sqlite")
food <- tbl(db, "Food")
foodgroup_names <- sort(unique(food$FoodGroup))
foodgroup_names
food
food$FoodGroup
sqldf("SELECT FoodGroup FROM Food", dbname = db)
dbListFields(food)
dbListFields(db, "food")
dbListFields(db, "Food")
db
food
class(food)
food[tbl]
as.data.grame(db)
as.data.frame(db)
dood["tbl"]
food["tbl"]
food["tbl_sqlite"]
food["tbl_sql"]
food[tbl_sql]
food$tbl
food$tbl_sqlite
food$tbl_sql
shiny::runApp()
shiny::runApp()
foodgroup_names <- c("All",
"American Indian/Alaska Native Foods",
"Baby Foods",
"Baked Products",
"Beef Products",
"Beverages",
"Breakfast Cereals",
"Cereal Grains and Pasta",
"Dairy and Egg Products",
"Fast Foods",
"Fats and Oils",
"Finfish and Shellfish Products",
"Fruits and Fruit Juices",
"Lamb, Veal, and Game Products",
"Legumes and Legume Products",
"Meals, Entrees, and Side Dishes",
"Nut and Seed Products",
"Pork Products",
"Poultry Products",
"Restaurant Foods",
"Sausages and Luncheon Meats",
"Snacks",
"Soups, Sauces, and Gravies",
"Spices and Herbs",
"Sweets",
"Vegetables and Vegetable Products")
as.list(foodgroup_names)
foodgroup_names
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
df <- food %>%
filter(Energy >= calories)
df
df
shiny::runApp()
dbDisctonnect(db)
dbDisconnect(db)
library(sqldf)
dbDisconnect(db)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
db <- src_sqlite("Food.sqlite")
food <- tbl(db, "Food")
food$Energy
str(food)
food$symbol$Energy
dbGetQuery(db, "SELECT * from Food WHERE Energy > 10")
library(SQLite)
library(RSQLite)
filter(food, Energy > 240)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages('ShinyDash')
devtools::install_github("ShinyDash", "trestletech")
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(devtools)
install_github('rstudio/htmltools')
install_github('ramnathv/htmlwidgets')
install_github('ramnathv/justGage')
install.packages("httpuv")
devtools::install_github("shiny-gridster", "wch")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?arrange
shiny::runApp()
shiny::runApp()
shiny::runApp()
traceback()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
traceback()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
